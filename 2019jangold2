#include <bits/stdc++.h>
using namespace std;
int N;
vector<int> line, s, ft(1e5+1, 0);

void updateft(int cur, int val){
	while(cur <= N){
		ft[cur] += val;
		cur += cur & (-cur);
	}
	return;
}
int getprev(int cur){
	int ans = 0;
	while(cur >= 1){
		ans += ft[cur];
		cur -= cur & (-cur);
	}
	return ans;
}
int main(){
	ifstream fin("sleepy.in");
	ofstream fout("sleepy.out");
	fin>>N;
	for(int i = 0; i < N; i++){
		int x; fin>>x;
		line.push_back(x);
	}
	int idx = -1;
	ft.resize(N+1);
	for(int i = N-1; i > 0; i--){
		updateft(line[i], 1);
		if(line[i] < line[i-1]){
			idx = i-1;
			break;
		}
	}
	fout<<idx+1<<endl;
	for(int i = 0; i <= idx; i++){
		updateft(line[i], 1);
		fout<<idx-i+getprev(line[i])-1;
		if(i == idx) fout<<endl;
		else fout<<" ";
	}
	return 0;
}
	

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int N, M, K;
const int maxn = 1e6;
//ll dp[maxn+1];
ll dp1[maxn+1];
const int MOD = 1e9+7;

ll bexp(ll a, ll b){
   if(b == 0) return 1;
   ll res = bexp(a, b/2);
   if(b % 2 == 1) return ((res * res % MOD) * a) % MOD;
   else return (res * res) % MOD;
}

int main(){
	ifstream fin("spainting.in");
	ofstream fout("spainting.out");
	fin>>N>>M>>K;
	//memset(dp, 0, sizeof(dp));
	memset(dp1, 0, sizeof(dp1));
	ll total = bexp(M, N) % MOD;
	/*for(int i = 1; i <= N; i++){
		if(i <= K-1){
			dp[i] = bexp(M, i) % MOD;
			continue;
		}
		for(int j = 1; j <= K-1; j++){
			dp[i] += (dp[i-j] * (M-1)) % MOD;
			dp[i] %= MOD;
		}
	}
	fout<<(total-dp[N] + MOD) % MOD<<endl;*/
	for(int i = 1; i <= N; i++){
		if(i <= K-1){
			dp1[i] += (dp1[i-1] + bexp(M, i) % MOD)	% MOD;
			continue;
		}
		dp1[i] = (dp1[i-1] + (((dp1[i-1] - dp1[i-K]) * (M-1)) % MOD)) % MOD;
	}
	fout<<(total - (dp1[N]-dp1[N-1]) + MOD) % MOD <<endl;		
	return 0;
}
